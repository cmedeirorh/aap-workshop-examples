---
- name: Update all packages on RHEL
  hosts: all
  become: true
  gather_facts: false
  
  tasks:
  - name: Update all installed packages using DNF module
    ansible.builtin.dnf:
      name: '*'
      state: latest
      # exclude: '{{ excluded_pks }}'
      update_cache: true
      update_only: true
      download_only: "{{ dnf_download }}"
    register: dnf_update_status
  
  - name: Check to see if we need a reboot
    ansible.builtin.command: needs-restarting -r
    register: result
    ignore_errors: true
  
  - name: Reboot when required
    ansible.builtin.reboot:
      msg: "Reboot initiated by Ansible"
    when: result.rc == 1

  - name: Create a ServiceNow change request
    servicenow.itsm.change_request:
      instance:
          host: "{{ sn_instance }}"
          username: "{{ sn_username }}"
          password: "{{ sn_password }}"
      state: new
      category: system_software
      type: standard
      requested_by: "ansible"
      priority: high
      risk: low
      impact: medium
      short_description: "System {{ inventory_hostname }} needs to be patched."
      description: "The following updated. \n {{ dnf_update_status }}"
    register: new_ticket
    when: dnf_update_status is changed and not dnf_download
    
  - name: Close a ServiceNow change request
    servicenow.itsm.change_request:
      instance:
          host: "{{ sn_instance }}"
          username: "{{ sn_username }}"
          password: "{{ sn_password }}"
      state: closed
      close_code: "successful"
      close_notes: "Packages Updates:  {{ dnf_update_status }}"
      assignment_group: Software
      number: "{{ sn_number }}"
    register: updated_ticket
    when: dnf_update_status is changed and is dnf_download
