---
- name: Misc Post Install Tasks for RHEL
  hosts: all
  become: true
  gather_facts: false

  tasks:      
  - name: Record the post_install_time
    register: post_install_time_raw
    changed_when: false
    ansible.builtin.command:
      cmd: "date '+%H:%M:%S'"

  - name: Get services
    check_mode: false
    ansible.builtin.service_facts:

  - name: Pre-check | services state
    ansible.builtin.set_fact:
      pre_check_services: "{{ services }}"
  
  - name: Capture post_install_time
    register: post_install_time
    ansible.builtin.set_stats:
      data:
        post_install_time: "{{ post_install_time_raw.stdout }}"
  
  - name: Making sure all our software is installed
    ansible.builtin.dnf:
      name:
        - insights-client
        - cockpit
      state: installed
    retries: 5
  
  - name: Register the insights client
    redhat.insights.insights_register:
      state: present
  
  - name: Copy the sshd-banner file into place
    ansible.builtin.copy:
      src: ../../files/sshd-banner
      dest: /etc/ssh/sshd-banner
      owner: root
      group: root
      mode: u+rw,g-wx,o-wx
  
  - name: Updating the sshd_config file to show the new banner
    ansible.builtin.lineinfile:
      path: /etc/ssh/sshd_config
      state: present
      regexp: ^#Banner none
      line: Banner /etc/ssh/sshd-banner
  
  - name: Reloading sshd service
    ansible.builtin.systemd:
      state: reloaded
      name: sshd.service
      enabled: true
  
  - name: Copy the new /etc/motd into place
    ansible.builtin.copy:
      src: ../../files/motd
      dest: /etc/motd
      owner: root
      group: root
      mode: u+rw,g-wx,o-wx
  
  - name: Copy the new /etc/issue into place
    ansible.builtin.copy:
      src: ../../files/motd
      dest: /etc/issue
      owner: root
      group: root
      mode: u+rw,g-wx,o-wx
  
  - name: Make sure the /etc/motd.d directory exists
    ansible.builtin.file:
      path: /etc/motd.d
      state: directory
      mode: "0755"
  
  - name: Enable the cockpit socket
    ansible.builtin.systemd_service:
      name: cockpit.socket
      state: started
      enabled: true
  
  - name: Check to see if we need a reboot
    register: reboot_required
    ansible.builtin.stat:
      path: /var/run/reboot-required
  
  - name: Reboot the machine if it is required
    when: reboot_required.stat.exists
    ansible.builtin.reboot:
