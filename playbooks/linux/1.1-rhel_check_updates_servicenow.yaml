---
- name: Check for updates on RHEL and create ServiceNow
  hosts: all
  become: true
  vars:
    changerequest_exist: "false"

  tasks:
  - name: Check all installed packages available using DNF module
    ansible.builtin.dnf:
      list: updates
      update_cache: true
    register: dnf_updates

  - name: Check if an active change request exists
    servicenow.itsm.change_request_info:
      instance:
          host: "{{ sn_instance }}"
          username: "{{ sn_username }}"
          password: "{{ sn_password }}"
      query:
        - short_description: "LIKE {{ inventory_hostname }}"
          state: = new
          sys_created_by: = ansible
    register: changerequest_info

  - name: Set facts
    when: changerequest_info.records[0].state is defined
    ansible.builtin.set_fact:
      changerequest_exist: "true"

  - name: Create a ServiceNow change request
    servicenow.itsm.change_request:
      instance:
          host: "{{ sn_instance }}"
          username: "{{ sn_username }}"
          password: "{{ sn_password }}"
      state: new
      category: system_software
      type: standard
      requested_by: "admin"
      priority: critical
      risk: low
      impact: medium
      short_description: 'Pending OS Updates on "{{ inventory_hostname }}".'
      description: |
        Server {{ inventory_hostname }} has {{ dnf_updates.packages | length }} pending package updates.
        
        The following packages are ready for update:
        {{ dnf_updates.packages | map(attribute='name') | join('\n') }}
    register: new_ticket
    when: ((dnf_updates is defined) and (changerequest_exist == "false"))

  - name: ServiceNow Change Request Number
    ansible.builtin.debug:
      var: new_ticket.record.number
    when: new_ticket is defined

  - name: ServiceNow Change Request Number
    ansible.builtin.debug:
      var: changerequest_info.records[0].number
    when: changerequest_exist == "true"
