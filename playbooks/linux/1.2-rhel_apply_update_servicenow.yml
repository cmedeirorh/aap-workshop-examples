---
- name: Update all packages on RHEL and Update ServiceNow
  hosts: all
  become: true

  tasks:
  - name: Retrieve change request Number
    servicenow.itsm.change_request_info:
      instance:
          host: "{{ sn_instance }}"
          username: "{{ sn_username }}"
          password: "{{ sn_password }}"
      query:
        - short_description: "LIKE {{ inventory_hostname }}"
          state: = new
          sys_created_by: = ansible      
    register: changerequest_info 

  - name: Ensure a ticket was found
    ansible.builtin.fail:
      msg: "No Change Request was found, run previous playbook to create it."
    when: changerequest_info.records[0].number is undefined or changerequest_info.records[0].number == None or changerequest_info.records[0].number | length == 0
   
  - name: Update all installed packages using DNF module
    ansible.builtin.dnf:
      name: '*'
      state: latest
      update_cache: true
      update_only: true
    register: dnf_updates
   
  - name: Check to see if we need a reboot
    ansible.builtin.command: needs-restarting -r
    register: result
    failed_when: false
    changed_when: false
    ignore_errors: true

  - name: Move ServiceNow change request status
    servicenow.itsm.change_request:
      instance:
          host: "{{ sn_instance }}"
          username: "{{ sn_username }}"
          password: "{{ sn_password }}"
      state: "{{ item }}"
      assignment_group: "Software"
      number: "{{ changerequest_info.records[0].number }}"
    loop:
      - scheduled
      - implement
      - review
    when: dnf_updates is changed
    
  - name: Close a ServiceNow change request
    servicenow.itsm.change_request:
      instance:
          host: "{{ sn_instance }}"
          username: "{{ sn_username }}"
          password: "{{ sn_password }}"
      state: closed
      close_code: "successful"
      close_notes: |
        COMPLETED: Packages Updated on server {{ inventory_hostname }}
        
        The following packages have been updated:
        {% for pkg in dnf_updates.results -%}
        - {{ pkg }}
        {% endfor %}
      assignment_group: "Software"
      number: "{{ changerequest_info.records[0].number }}"
    register: updated_ticket
    when: dnf_updates is changed

  - name: Reboot when required
    ansible.builtin.reboot:
      msg: "Reboot initiated by Ansible"
    when: result.rc == 1
